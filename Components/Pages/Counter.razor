@page "/counter/{InitialCount:int?}"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<div class="container">
    <h1>Counter</h1>

    <p role="status">Current count: @_currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Add @IncrementAmount</button>
    <button class="btn btn-secondary" @onclick="IncrementCountWithDelay">Add 1 with delay</button>
    <button class="btn btn-warning" @onclick="ResetCount">Reset</button>
    <hr>
    <div class="mt-3 row justify-content-center">
        <input class="col-4" type="text" @bind="text">
        <button class="btn btn-secondary col-2" @onclick="OnClickTextClear">clear</button>
        <p>@text</p>
    </div>
</div>


@if (_currentCount > 10)
{
    <div class="text-success">You win!</div>
}
@code {
    private int _currentCount = 0;
    string text = "";

    private void OnClickTextClear(MouseEventArgs e) => text = "";

    protected override void OnInitialized() => _currentCount = InitialCount;

    [Parameter] public int IncrementAmount { get; set; } = 1;
    [Parameter] public int InitialCount { get; set; }

    private void IncrementCount() => _currentCount += IncrementAmount;

    private void ResetCount() => _currentCount = 0;

    async Task IncrementCountWithDelay()
    {
        await Task.Delay(1000);
        _currentCount++;
    }
}
